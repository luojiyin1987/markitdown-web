version: '3.8'

services:
  markitdown-web:
    build: .
    container_name: markitdown-web
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - MAX_FILE_SIZE=52428800  # 50MB in bytes
    volumes:
      - ./uploads:/app/uploads
      - ./outputs:/app/outputs
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - markitdown-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.markitdown.rule=Host(`markitdown.localhost`)"
      - "traefik.http.services.markitdown.loadbalancer.server.port=8000"

  # 可选：添加 Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: markitdown-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - markitdown-web
    networks:
      - markitdown-network
    profiles:
      - "with-nginx"

  # 可选：添加 Redis 用于缓存
  redis:
    image: redis:alpine
    container_name: markitdown-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - markitdown-network
    profiles:
      - "with-redis"

volumes:
  redis-data:
    driver: local

networks:
  markitdown-network:
    driver: bridge 